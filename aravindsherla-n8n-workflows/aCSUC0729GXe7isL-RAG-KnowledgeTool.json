{
  "name": "RAG-KnowledgeTool",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -440,
        0
      ],
      "id": "b2722709-96db-4add-a853-7c08109ce321",
      "name": "When chat message received",
      "webhookId": "fce9f47b-3fdb-42c6-9403-d0f0ce49f9c7"
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_jA4t6wqyYMgJJpbBX1NyC3m5",
          "mode": "id"
        },
        "prompt": "define",
        "text": "=Answer user question:{{ $json.question }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        220,
        0
      ],
      "id": "42a5045f-7ef1-499c-a446-75ac5ff688bd",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "KVcxES2D9yziCKLc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        520,
        140
      ],
      "id": "b71600a0-db6c-41de-bb07-1b57b60a1c57",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "It removes any annotations from the received output.Always call this tool before responding to the customer.",
        "jsCode": "function removeAnnotations(input) {\n  return input.replace(/{{[^}]*}}/g, '').trim();\n}\n\nconst output=removeAnnotations(query);\nreturn output;"
      },
      "type": "@n8n/n8n-nodes-langchain.toolCode",
      "typeVersion": 1.2,
      "position": [
        280,
        220
      ],
      "id": "696e0cec-613c-4165-8df0-2d0c918f57ff",
      "name": "Code Tool"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -660,
        240
      ],
      "id": "ef5f51c0-268b-4ff5-a95f-8a5c526fa1a8",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_jA4t6wqyYMgJJpbBX1NyC3m5",
          "mode": "id"
        },
        "prompt": "define",
        "text": "You are a helpful assistant. Your task is to create a set of 10 questions and their corresponding answers based only on the uploaded PDF knowledge base.\n\nRules:\n- Always respond in a valid JSON object.\n- Use only the uploaded PDF to generate both the questions and answers.\n- If any information is missing, use \"answer\": \"Information not found.\"\n- Do not add extra text, greetings, explanations, or formatting outside JSON.\n\nFormat for each entry:\n{\n  \"question_1\": \"<generated question>\",\n  \"answer_1\": \"<short, clear answer from the knowledge base>\",\n  \"question_2\": \"<generated question>\",\n  \"answer_2\": \"<short, clear answer from the knowledge base>\"\n}\n\nreturn only the Json, don't mention format.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -440,
        240
      ],
      "id": "534e9f0e-81cf-4c2f-8e28-c19b61694d32",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "KVcxES2D9yziCKLc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        240
      ],
      "id": "2362b112-a167-4e9f-be33-b4bbb3d4cf11",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "question"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -700,
        100
      ],
      "id": "b8520713-c7b4-40bc-b94a-9b605559d5cf",
      "name": "When Executed by Another Workflow"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        []
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        []
      ]
    },
    "Code Tool": {
      "ai_tool": [
        [
          {
            "node": "OpenAI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 1,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}